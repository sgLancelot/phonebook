{"version":3,"sources":["services/persons.js","App.js","index.js"],"names":["baseURL","axios","get","then","response","data","newPerson","post","id","delete","newID","changedPerson","put","Notification","message","style","color","background","fontSize","borderStyle","borderRadius","padding","marginBottom","ErrorNoti","Filter","onChange","PersonForm","props","onSubmit","value","newName","handleNameChange","newNumber","handleNumberChange","type","App","useState","persons","setPersons","setNewName","setNewNumber","filter","setFilter","setMessage","error","setError","useEffect","personService","initialPersons","event","x","name","toUpperCase","includes","target","preventDefault","find","number","addedPerson","setTimeout","concat","window","confirm","targetID","map","alert","key","onClick","catch","deletePerson","ReactDOM","render","document","getElementById"],"mappings":"0NACMA,EAAQ,eAoBC,EAlBA,WAEX,OADgBC,IAAMC,IAAIF,GACXG,KAAK,SAAAC,GAAQ,OAAIA,EAASC,QAgB9B,EAbA,SAACC,GAEZ,OADgBL,IAAMM,KAAKP,EAASM,GACrBH,KAAK,SAAAC,GAAQ,OAAEA,EAASC,QAW5B,EARH,SAACG,GACT,OAAOP,IAAMQ,OAAN,UAAgBT,EAAhB,YAA2BQ,KAOvB,EAJD,SAACE,EAAOC,GAClB,OAAOV,IAAMW,IAAN,UAAaZ,EAAb,YAAwBU,GAASC,I,4NCf5C,IAAME,EAAe,SAAC,GAAe,IAAdC,EAAa,EAAbA,QAUrB,OAAgB,OAAZA,EACK,KAGP,yBAAKC,MAbW,CAChBC,MAAO,QACPC,WAAY,YACZC,SAAU,OACVC,YAAa,QACbC,aAAc,MACdC,QAAS,OACTC,aAAc,SAOXR,IAKDS,EAAY,SAAC,GAAe,IAAdT,EAAa,EAAbA,QAUlB,OAAgB,OAAZA,EACK,KAGP,yBAAKC,MAbW,CAChBC,MAAO,MACPC,WAAY,YACZC,SAAU,OACVC,YAAa,QACbC,aAAc,MACdC,QAAS,OACTC,aAAc,SAOXR,IAKDU,EAAS,SAAC,GAAgB,IAAfC,EAAc,EAAdA,SACf,OACE,8BACE,kDAAuB,2BAAOA,SAAUA,OAKxCC,EAAa,SAACC,GAClB,OACE,0BAAMC,SAAUD,EAAMC,UACpB,sCAAW,2BAAOC,MAAOF,EAAMG,QAASL,SAAUE,EAAMI,oBACxD,wCAAa,2BAAOF,MAAOF,EAAMK,UAAWP,SAAUE,EAAMM,sBAC5D,6BAAK,4BAAQC,KAAK,UAAb,UAiGIC,EA5FH,WAAO,IAAD,EACeC,mBAAS,IADxB,mBACRC,EADQ,KACCC,EADD,OAEgBF,mBAAS,IAFzB,mBAERN,EAFQ,KAECS,EAFD,OAGoBH,mBAAS,IAH7B,mBAGRJ,EAHQ,KAGGQ,EAHH,OAIcJ,mBAAS,IAJvB,mBAIRK,EAJQ,KAIAC,EAJA,OAKgBN,mBAAS,MALzB,mBAKRtB,EALQ,KAKC6B,EALD,OAMYP,mBAAS,MANrB,mBAMRQ,EANQ,KAMDC,EANC,KAShBC,oBAAU,WACRC,IAEG5C,KAAK,SAAA6C,GACJV,EAAWU,MAEd,IA+DH,OACE,6BACE,yCACA,kBAAC,EAAD,CAAclC,QAASA,IACvB,kBAAC,EAAD,CAAWA,QAAS8B,IACpB,kBAAC,EAAD,CAAQnB,SA/Be,SAACwB,GAC1BP,EAAUL,EAAQI,OAAO,SAAAS,GAAC,OAAIA,EAAEC,KAAKC,cAAcC,SAASJ,EAAMK,OAAOzB,MAAMuB,qBA+B7E,yCACA,kBAAC,EAAD,CAAYxB,SApEE,SAACqB,GAEjB,GADAA,EAAMM,iBAC4C,qBAAtClB,EAAQmB,KAAK,SAAAN,GAAC,OAAIA,EAAEC,OAAOrB,IAKrCiB,EAJwB,CACtBI,KAAMrB,EACN2B,OAAQzB,IAE4B7B,KAAK,SAAAuD,GACzCf,EAAW,SAAD,OAAUb,IACpB6B,WAAW,WAAMhB,EAAW,OAAO,KACnCL,EAAWD,EAAQuB,OAAOF,WAEzB,GAAIrB,EAAQmB,KAAK,SAAAN,GAAC,OAAIA,EAAEC,OAAOrB,IAAS2B,SAAWzB,GACtD,GAAI6B,OAAOC,QAAP,UAAkBhC,EAAlB,2EAAmG,CACrG,IAAMiC,EAAY1B,EAAQmB,KAAK,SAAAN,GAAC,OAAIA,EAAEC,OAAOrB,IAAStB,GAEhDG,E,qVAAa,IADE0B,EAAQmB,KAAK,SAAAN,GAAC,OAAEA,EAAE1C,KAAKuD,IACzB,CAAqBN,OAAOzB,IAC/Ce,EAAoBgB,EAAUpD,GAAeR,KAAK,SAAAC,GAChDkC,EAAWD,EAAQ2B,IAAI,SAAAd,GAAC,OAAGA,EAAE1C,KAAOuD,EAAWb,EAAI9C,EAASC,gBAKhEwD,OAAOI,MAAP,UAAgBnC,EAAhB,oCAEFS,EAAW,IACXC,EAAa,KA0CsBV,QAASA,EAASE,UAAWA,EAAWD,iBAvCpD,SAACkB,GACxBV,EAAWU,EAAMK,OAAOzB,QAsCuFI,mBApCtF,SAACgB,GAC1BT,EAAaS,EAAMK,OAAOzB,UAoCxB,uCApBA,oCACCY,EAAOuB,IAAI,SAAAd,GACV,OACE,yBAAKgB,IAAKhB,EAAEC,MACXD,EAAEC,KADH,IACUD,EAAEO,OADZ,IACoB,4BAAQU,QAAS,kBAfxB,SAAAjB,GACfW,OAAOC,QAAP,iBAAyBZ,EAAEC,KAA3B,OACFJ,EAAkBG,EAAE1C,IAAI4D,MAAM,SAAAxB,GAC5BC,EAAS,kBAAD,OAAmBK,EAAEC,KAArB,0CACRQ,WAAW,WAAMd,EAAS,OAAO,OAWUwB,CAAanB,KAAlC,UADpB,IAC0E,mCC/HpFoB,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,W","file":"static/js/main.8821e7a9.chunk.js","sourcesContent":["import axios from 'axios'\r\nconst baseURL='/api/persons'\r\n\r\nconst getAll = () => {\r\n    const request = axios.get(baseURL)\r\n    return request.then(response => response.data)\r\n}\r\n\r\nconst create = (newPerson) => {\r\n    const request = axios.post(baseURL, newPerson)\r\n    return request.then(response=>response.data)\r\n}\r\n\r\nconst del = (id) => {\r\n    return axios.delete(`${baseURL}/${id}`)\r\n}\r\n\r\nconst amend = (newID, changedPerson) => {\r\n    return axios.put(`${baseURL}/${newID}`, changedPerson)\r\n}\r\n\r\nexport default {getAll, create, del, amend}","import React, { useState, useEffect } from 'react'\nimport personService from './services/persons'\n\nconst Notification = ({message}) => {\n  const notiStyle = {\n    color: 'green',\n    background: 'lightgrey',\n    fontSize: '20px',\n    borderStyle: 'solid',\n    borderRadius: '5px',\n    padding: '10px',\n    marginBottom: '10px'\n  }\n  if (message === null) {\n    return null\n  }\n  return (\n    <div style={notiStyle}>\n      {message}\n    </div>\n  )\n}\n\nconst ErrorNoti = ({message}) => {\n  const notiStyle = {\n    color: 'red',\n    background: 'lightgrey',\n    fontSize: '20px',\n    borderStyle: 'solid',\n    borderRadius: '5px',\n    padding: '10px',\n    marginBottom: '10px'\n  }\n  if (message === null) {\n    return null\n  }\n  return (\n    <div style={notiStyle}>\n      {message}\n    </div>\n  )\n}\n\nconst Filter = ({onChange}) => {\n  return (\n    <form>\n      <div>filter shown with <input onChange={onChange} /></div>\n    </form>\n  )\n}\n\nconst PersonForm = (props) => {\n  return (\n    <form onSubmit={props.onSubmit}>\n      <div>name: <input value={props.newName} onChange={props.handleNameChange} /></div>\n      <div>number: <input value={props.newNumber} onChange={props.handleNumberChange} /></div>\n      <div><button type=\"submit\">add</button></div>\n    </form>\n  )\n}\n\nconst App = () => {\n  const [ persons, setPersons] = useState([]) \n  const [ newName, setNewName ] = useState('')\n  const [ newNumber, setNewNumber ] = useState('')\n  const [ filter, setFilter ] = useState([])\n  const [ message, setMessage ] = useState(null)\n  const [ error, setError ] = useState(null)\n\n\n  useEffect(() => {\n    personService\n      .getAll()\n      .then(initialPersons => {\n        setPersons(initialPersons)\n      })\n  }, [])\n\n  const addPerson = (event) => {\n    event.preventDefault()      // clicking submit causes page to reload. this prevents page from reloading.\n    if ((typeof persons.find(x => x.name===newName)==='undefined')){\n      const newPersonObject = {\n        name: newName,\n        number: newNumber,\n      }\n      personService.create(newPersonObject).then(addedPerson => {\n        setMessage(`Added ${newName}`)\n        setTimeout(()=> {setMessage(null)},5000)\n        setPersons(persons.concat(addedPerson))\n      })}\n    else if (persons.find(x => x.name===newName).number !== newNumber) {\n      if (window.confirm(`${newName} is already added to phonebook, replace the old number with a new one?`)){\n        const targetID = (persons.find(x => x.name===newName).id)\n        const targetPerson = persons.find(x=>x.id===targetID)\n        const changedPerson = {...targetPerson, number:newNumber}\n        personService.amend(targetID, changedPerson).then(response => {\n          setPersons(persons.map(x=> x.id !== targetID ? x : response.data))\n          \n        })\n      }\n    } else {\n      window.alert(`${newName} is already added to phonebook!`)\n    }\n    setNewName('')\n    setNewNumber('')\n  }\n\n  const handleNameChange = (event) => {\n    setNewName(event.target.value)\n  }\n  const handleNumberChange = (event) => {\n    setNewNumber(event.target.value)\n  } \n  const handleFilterChange = (event) => {\n    setFilter(persons.filter(x => x.name.toUpperCase().includes(event.target.value.toUpperCase())))\n  }\n  const deletePerson = x => {\n    if (window.confirm(`Delete ${x.name}?`)){\n      personService.del(x.id).catch(error => {\n        setError(`Information of ${x.name} has already been removed from server`)\n        setTimeout(()=> {setError(null)},5000)\n      })\n    } \n  }\n\n  const rows = () => {\n    return (\n      <>\n      {filter.map(x => {\n        return (\n          <div key={x.name}>\n          {x.name} {x.number} <button onClick={()=>deletePerson(x)}>delete</button> <br/>\n          </div>\n        )\n      })}\n      </>\n    )\n  }\n\n  return (\n    <div>\n      <h2>Phonebook</h2>\n      <Notification message={message} />\n      <ErrorNoti message={error} />\n      <Filter onChange={handleFilterChange} />\n      <h3>Add a new</h3>\n      <PersonForm onSubmit={addPerson} newName={newName} newNumber={newNumber} handleNameChange={handleNameChange} handleNumberChange={handleNumberChange} />\n      <h3>Numbers</h3>\n      {rows()}\n    </div>\n  )\n}\n\nexport default App","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport App from './App'\r\n\r\nReactDOM.render(<App />, document.getElementById('root'))"],"sourceRoot":""}